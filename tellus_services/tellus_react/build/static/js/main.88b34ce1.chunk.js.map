{"version":3,"sources":["components/Header.js","components/WelcomeCard.js","routes/Pages/PagesWelcome.js","routes/Users/UsersNew.js","components/RegistryEntitiesNewMap.js","routes/RegistryEntities/RegistryEntitiesNew.js","components/RegistryEntitiesIndexMap.js","routes/RegistryEntities/RegistryEntitiesIndex.js","routes/Pages/PagesExplorer.js","App.js","serviceWorker.js","index.js",".secrets.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","React","Component","WelcomeCard","Container","Row","Col","md","span","offset","src","srcSet","type","onClick","this","props","tryToLoginViaMetamask","PagesWelcome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoginnedViaMetamask","bind","assertThisInitialized","window","ethereum","selectedAddress","enable","accounts","Users","contract","UsersJSON","setProvider","web3","currentProvider","defaults","from","deployed","get_my_role","role","toNumber","setState","history","push","components_WelcomeCard","UsersNew","username","email","eth_address","handleClick","handleInputChange","isMetaMask","create","e","target","value","checked","name","defineProperty","Form","Group","controlId","as","Label","column","sm","Control","placeholder","onChange","Button","RegistryEntitiesNewMap","map","maps","onMarkerDragEnd","markerListener","Marker","position","lat","lng","draggable","addListener","ev","latLng","remove","style","width","height","lib_default","bootstrapURLKeys","key","secrets","defaultCenter","center","defaultZoom","zoom","onGoogleApiLoaded","_ref","renderMarkers","defaultProps","RegistryEntitiesNew","ipfs","ipfsClient","process","title","description","documents_url","image_url","points","upload_documents","upload_image","saveLatLngToState","event","stopPropagation","preventDefault","saveToIpfsDocuments","files","ipfsId","_this2","add","toConsumableArray","progress","prog","console","log","concat","then","response","hash","catch","err","error","saveToIpfsImage","_this3","Math","round","RegistryEntities","RegistryEntitiesJSON","components_RegistryEntitiesNewMap","RegistryEntitiesIndexMap","_map","_maps","registry_entities","registry_entity","prevProps","prevState","snapshot","RegistryEntitiesIndex","loadRegistryEntities","get_current_id","registry_entities_current_id","i","l","find","id","point","created_at","Date","updated_at","Fragment","components_RegistryEntitiesIndexMap","Card","Img","variant","Body","Title","Text","href","Footer","toLocaleString","PagesExplorer","transactions","fetch","json","Table","striped","bordered","hover","transaction","transactionHash","eventName","App","react_router","path","exact","component","components_Header","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","production","googleMapsKey","development"],"mappings":"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","file":"static/js/main.88b34ce1.chunk.js","sourcesContent":["import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <nav>\n        <ul className=\"mainHeader\">\n          <li>\n            <Link to=\"/\">Welcome</Link>\n          </li>\n          <li>\n            <Link to=\"/users/new\">New User</Link>\n          </li>\n          <li>\n            <Link to=\"/registry_entities/new\">New Registry Entity</Link>\n          </li>\n          <li>\n            <Link to=\"/registry_entities/index\">Registry Entities Index</Link>\n          </li>\n          <li>\n            <Link to=\"/explorer\">Explorer</Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass WelcomeCard extends React.Component {\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }} className=\"bg_card\">\n            <Row>\n              <Col className=\"separator_hor\">\n                <div>\n                  <img src=\"/tellurium-logo.png\"\n                       srcSet=\"/tellurium-logo@2x.png 2x,\n                              /tellurium-logo@3x.png 3x\"\n                       className=\"Tellurium_logo\" />\n                </div>\n                <div>\n                  <img src=\"/art.jpg\"\n                       srcSet=\"/art@2x.jpg 2x,\n                              /art@3x.jpg 3x\"\n                       className=\"art\" />\n                </div>\n                <div className=\"With-Proof-of-Ownership\">\n                  With Proof of Ownership on the Blockchain property owners can\n                  express their real estate rights in the crypto economy with\n                  our Patent Pending Blockchain Protocol.\n                </div>\n              </Col>\n              <Col>\n                <div className=\"Welcome\">\n                  Welcome!\n                </div>\n                <div className=\"signin_via_metamask_button_container\">\n                  <button type=\"button\"\n                          className=\"signin_via_metamask_button\"\n                          onClick={this.props.tryToLoginViaMetamask}\n                  >Login via MetaMask</button>\n                </div>\n                <div className=\"signin_as_notary_button_container\">\n                  <button type=\"button\"\n                          className=\"signin_as_notary_button\"\n                          onClick={this.tryToLoginViaMetamask}\n                  >Sign in as Notary</button>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default WelcomeCard;\n\n\n{/* <React.Fragment>\n<h2>Welcome</h2>\n{\n  this.state.isLoginnedViaMetamask ? (\n    this.state.role === 1 ? (\n      <React.Fragment>\n        <p>You logined via MetaMask as Deployer</p>\n      </React.Fragment>\n    ) : (\n      this.state.role === 2 ? (\n        <React.Fragment>\n          <p>You logined via MetaMask as Notary</p>\n        </React.Fragment>\n      ) : (\n        this.state.role === 3 ? (\n          <React.Fragment>\n            <p>You logined via MetaMask as a common User</p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p>You are not in validated users list</p>\n          </React.Fragment>\n        )\n      )\n    )\n  ) : (\n    <React.Fragment>\n      <p>You'll need to auth via MetaMask</p>\n      <button type=\"button\"\n              onClick={this.tryToLoginViaMetamask}\n      >Login via MetaMask</button>\n    </React.Fragment>\n  )\n}\n</React.Fragment> */}","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport WelcomeCard from '../../components/WelcomeCard'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async componentDidMount () {\n    if (window.ethereum.selectedAddress) {\n      // await this.tryToLoginViaMetamask();\n    }\n  }\n\n  async tryToLoginViaMetamask () {\n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role: role\n      });\n\n      this.props.history.push('/registry_entities/index');\n    }\n  }\n\n  render () {\n    return (\n      <WelcomeCard tryToLoginViaMetamask={this.tryToLoginViaMetamask}></WelcomeCard>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nclass UsersNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      eth_address: \"\"\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      deployed.create(this.state.eth_address, 0);\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <Form>\n        <Form.Group controlId=\"formUsername\" as={Row}>\n          <Form.Label column sm={2}>Username:</Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\"\n                          placeholder=\"Username\"\n                          name=\"username\"\n                          value={this.state.username}\n                          onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n        <Form.Group controlId=\"formEmail\" as={Row}>\n          <Form.Label column sm={2}>Email:</Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\"\n                          placeholder=\"Email\"\n                          name=\"email\"\n                          value={this.state.email}\n                          onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n        <Form.Group controlId=\"formEthAddress\" as={Row}>\n          <Form.Label column sm={2}>Ethereum address:</Form.Label>\n          <Col sm={10}>\n            <Form.Control type=\"text\"\n                          placeholder=\"Ethereum address, ex. 0x769048c07D7B7f55cD58c14BbE7d828da555dc08\"\n                          name=\"eth_address\"\n                          value={this.state.eth_address}\n                          onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n        <Row>\n          <Col>\n            <Button type=\"button\" onClick={this.handleClick}>\n              Validate\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default UsersNew;","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nclass RegistryEntitiesNewMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11\n  }\n\n  renderMarkers(map, maps, onMarkerDragEnd) {\n    const marker = new maps.Marker({\n      position: {\n        lat: 37.775,\n        lng: -122.414\n      },\n      map,\n      draggable: true\n    })\n\n    const markerListener = marker.addListener(\"dragend\", (ev) => {\n      onMarkerDragEnd({ lat: ev.latLng.lat(), lng: ev.latLng.lng() });\n    })\n\n    this.setState({\n      markerListener: markerListener\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.markerListener.remove()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '480px' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' library markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.renderMarkers(map, maps, this.props.onMarkerDragEnd)\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default RegistryEntitiesNewMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nimport ipfsClient from 'ipfs-http-client';\n\nimport RegistryEntitiesNewMap from \"../../components/RegistryEntitiesNewMap\";\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.ipfs = ipfsClient(\n      process.env.REACT_APP_IPFS_API_SERVER_URL,\n      process.env.REACT_APP_IPFS_API_SERVER_PORT\n    );\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      documents_url: \"\",\n      image_url: \"\",\n      points: [ 5, 5, 5 ]\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.upload_documents = this.upload_documents.bind(this);\n    this.upload_image = this.upload_image.bind(this);\n\n    this.saveLatLngToState = this.saveLatLngToState.bind(this);\n  }\n\n  upload_documents (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.saveToIpfsDocuments(event.target.files)\n  }\n\n  saveToIpfsDocuments (files) {\n    let ipfsId\n    this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          documents_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  upload_image (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.saveToIpfsImage(event.target.files)\n  }\n\n  saveToIpfsImage (files) {\n    let ipfsId\n    this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          image_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  saveLatLngToState(latLng) {\n    this.setState({\n      points: [\n        Math.round(latLng.lat*LAT_LNG_DIVIDER),\n        Math.round(latLng.lng*LAT_LNG_DIVIDER),\n        1\n      ]\n    });\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await RegistryEntities.deployed();\n      await deployed.create(\n        this.state.title,\n        this.state.description,\n        this.state.documents_url,\n        this.state.image_url,\n        this.state.points\n      );\n      \n      this.props.history.push('/registry_entities/index')\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <Form>\n        <Form.Group controlId=\"formTitle\" as={Row}>\n          <Form.Label column md={2}>Title:</Form.Label>\n          <Col md={9}>\n            <Form.Control type=\"text\"\n                          placeholder=\"Title\"\n                          name=\"title\"\n                          value={this.state.title}\n                          onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n        <Form.Group controlId=\"formDescription\" as={Row}>\n          <Form.Label column md={2}>Description:</Form.Label>\n          <Col md={9}>\n            <Form.Control as=\"textarea\"\n                          placeholder=\"Description\"\n                          name=\"description\"\n                          value={this.state.description}\n                          onChange={this.handleInputChange} />\n          </Col>\n        </Form.Group>\n        <Form.Group controlId=\"formDocumentsUrl\" as={Row}>\n          <Form.Label column md={2}>Upload Documents:</Form.Label>\n          <Col md={9}>\n            <Form.Control type=\"file\"\n                          name=\"documents_url\"\n                          onChange={this.upload_documents} />\n          </Col>\n        </Form.Group>\n        <Form.Group controlId=\"formImageUrl\" as={Row}>\n          <Form.Label column md={2}>Upload Image:</Form.Label>\n          <Col md={9}>\n            <Form.Control type=\"file\"\n                          name=\"image_url\"\n                          onChange={this.upload_image} />\n          </Col>\n        </Form.Group>\n        <Form.Group controlId=\"\" as={Row}>\n          <Col md={{ span: 10, offset: 1 }}>\n            <RegistryEntitiesNewMap onMarkerDragEnd={this.saveLatLngToState} />\n          </Col>\n        </Form.Group>\n        <Row>\n          <Col>\n            <Button type=\"button\" onClick={this.handleClick}>\n              Save\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    );\n  }\n}\n\nexport default RegistryEntitiesNew;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesIndexMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11,\n    registry_entities: []\n  }\n\n  renderMarkers() {\n    let _map = this.state._map\n    let _maps = this.state._maps\n\n    let latLngs = this.props.registry_entities.map((registry_entity) => {\n      return {\n        lat: registry_entity.points[0] / LAT_LNG_DIVIDER,\n        lng: registry_entity.points[1] / LAT_LNG_DIVIDER\n      }\n    })\n\n    latLngs.map(function (latLng) {\n      return new _maps.Marker({\n        position: {\n          lat: latLng.lat,\n          lng: latLng.lng\n        },\n        map: _map\n      })\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // REFACTOR: Not the best solution, because 'renderMarkers' function\n    // should be called only on 'this.props.registry_entities' change\n    // event.\n    this.renderMarkers()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '480px' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.setState({ _map: map, _maps: maps })\n            this.renderMarkers()\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndexMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Button, Card, Container } from 'react-bootstrap';\n\nimport RegistryEntitiesIndexMap from \"../../components/RegistryEntitiesIndexMap\";\n\nclass RegistryEntitiesIndex extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      registry_entities: []\n    };\n  }\n\n  async componentDidMount () {\n    if (window.ethereum.selectedAddress) {\n      await this.loadRegistryEntities();\n    }\n  }\n\n  async loadRegistryEntities () {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await RegistryEntities.deployed();\n      let registry_entities_current_id = await deployed.get_current_id();\n\n      let registry_entities = [];\n      for (let i = 1, l = registry_entities_current_id.toNumber(); i <= l; l--) {\n        let registry_entity = await deployed.find(l);\n        registry_entities.push({\n          id: registry_entity[0].toNumber(),\n          title: registry_entity[1],\n          description: registry_entity[2],\n          documents_url: registry_entity[3],\n          image_url: registry_entity[4],\n          points: registry_entity[5].map( point => point.toNumber() ),\n          created_at: (new Date(registry_entity[6].toNumber() * 1000)),\n          updated_at: (new Date(registry_entity[7].toNumber() * 1000))\n        });\n      }\n\n      // console.log(registry_entities)\n\n      this.setState({\n        registry_entities: registry_entities\n      });\n    } else {\n  \n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Index of Registry Entities</h1>\n        <Row>\n          <Col md={{span: 10, offset: 1}}>\n            <RegistryEntitiesIndexMap registry_entities={this.state.registry_entities} />\n          </Col>\n        </Row>\n        <Container>\n          {\n            this.state.registry_entities.map((registry_entity) => {\n              return (\n                <Row key={registry_entity.id}>\n                  <Col>\n                    <Card>\n                      <Card.Img variant=\"top\" src={registry_entity.image_url} />\n                      <Card.Body>\n                        <Card.Title>{registry_entity.title}</Card.Title>\n                        <Card.Text>{registry_entity.description}</Card.Text>\n                        <Button variant=\"primary\"\n                                href={registry_entity.documents_url}\n                                target=\"_blank\"\n                        >Download documents</Button>\n                      </Card.Body>\n                      <Card.Footer>\n                        <small className=\"text-muted\">Updated at {\n                          registry_entity.updated_at.toLocaleString(\"en-US\")\n                        }</small>\n                      </Card.Footer>\n                    </Card>\n                  </Col>\n                </Row>\n              )\n            })\n          }\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndex;\n","import React from 'react';\nimport { Table, Row, Col } from 'react-bootstrap';\n\nclass PagesExplorer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_EXPLORER_SERVICE_BASE_URL}/transactions`);\n    response = await response.json();\n    let transactions = response;\n    this.setState({\n      transactions\n    });\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <h2>Explorer</h2>\n        <Row>\n          <Col md={{span: 10, offset: 1}}>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>transactionHash</th>\n                  <th>eventName</th>\n                </tr>\n              </thead>\n              <tbody>\n              {\n                this.state.transactions.map((transaction) => {\n                  return (\n                    <tr>\n                      <td><a href={'https://ropsten.etherscan.io/tx/' + transaction.transactionHash}>{transaction.transactionHash}</a></td>\n                      <td>{transaction.eventName}</td>\n                    </tr>\n                  )\n                })\n              }\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PagesExplorer;\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header';\n\nimport PagesWelcome from './routes/Pages/PagesWelcome';\nimport UsersNew from './routes/Users/UsersNew';\nimport RegistryEntitiesNew from './routes/RegistryEntities/RegistryEntitiesNew';\nimport RegistryEntitiesIndex from './routes/RegistryEntities/RegistryEntitiesIndex';\nimport PagesExplorer from './routes/Pages/PagesExplorer';\n\nclass App extends React.Component {\n  render () {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Route path=\"/\" exact component={PagesWelcome} />\n            <Route path=\"/users/new\" component={UsersNew} />\n            <Route path=\"/registry_entities/index\" component={RegistryEntitiesIndex} />\n            <Route path=\"/registry_entities/new\" component={RegistryEntitiesNew} />\n            <Route path=\"/explorer\" component={PagesExplorer} />\n          </div>\n          <Header />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  production: {\n    googleMapsKey: \"AIzaSyDIbd-oSFvBx_JtZzFuBkGHGdvA5SPBMVM\"\n  },\n  development: {\n    googleMapsKey: \"AIzaSyDbqXZerRwHyXrq8EIm488aJLmuBZ2J0Jg\"\n  }\n};"],"sourceRoot":""}