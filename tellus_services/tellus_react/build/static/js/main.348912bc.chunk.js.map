{"version":3,"sources":["components/Header.js","components/MainWindow.js","routes/Pages/PagesWelcome.js","routes/Pages/PagesAcceptInvite.js","routes/Users/UsersNew.js","routes/Users/UsersIndex.js","components/RegistryEntitiesNewMap.js","components/AboveTheMapWindow.js","routes/RegistryEntities/RegistryEntitiesNew.js","components/RegistryEntitiesIndexMap.js","routes/RegistryEntities/RegistryEntitiesIndex.js","routes/Pages/PagesExplorer.js","App.js","serviceWorker.js","index.js",".secrets.js"],"names":["Header","react_default","a","createElement","className","Container","Row","Col","md","src","srcSet","react_router_dom","to","this","props","current_user_role","React","Component","MainWindow","span","offset","style","children","PagesWelcome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoginnedViaMetamask","tryToLoginViaMetamask","bind","assertThisInitialized","window","ethereum","enable","accounts","Users","contract","UsersJSON","setProvider","web3","currentProvider","defaults","from","deployed","get_my_role","role","toNumber","setState","app","history","push","components_MainWindow","marginTop","type","onClick","username","query_params","handleInputChange","query_params_str","location","search","split","map","query_param","_query_param$split","_query_param$split2","slicedToArray","k","v","url","process","fetch","response","json","console","log","e","target","value","checked","name","defineProperty","padding","InputGroup","Form","Control","placeholder","autoComplete","onChange","UsersNew","email","eth_address","invitation_email","email_preview_url","handleClick","handleClickIfIsMetaMask","handleSendInviteButtonClick","result","preview_url","params","method","headers","Content-Type","body","JSON","stringify","create","_context2","t0","isMetaMask","Fragment","Group","controlId","Label","Button","variant","margin","marginBottom","FormControl","Append","wordWrap","href","UsersIndex","users","concat","backgroundColor","minHeight","Table","hover","user","id","RegistryEntitiesNewMap","maps","onMarkerDragEnd","markerListener","Marker","position","lat","lng","draggable","addListener","ev","latLng","remove","width","height","lib_default","bootstrapURLKeys","key","secrets","defaultCenter","center","defaultZoom","zoom","onGoogleApiLoaded","_ref","renderMarkers","defaultProps","AboveTheMapWindow","RegistryEntitiesNew","ipfs","ipfsClient","title","description","documents_url","image_url","priceUSD","documents_files","images_files","points","upload_documents","upload_image","saveLatLngToState","event","stopPropagation","preventDefault","files","add","toConsumableArray","progress","prog","Math","round","RegistryEntities","RegistryEntitiesJSON","saveToIpfsDocuments","ipfsId","hash","error","_context3","saveToIpfsImage","t1","components_RegistryEntitiesNewMap","components_AboveTheMapWindow","as","RegistryEntitiesIndexMap","_map","_maps","registry_entities","forEach","registry_entity","marker","showRegistryEntity","prevProps","prevState","snapshot","_this2","RegistryEntitiesIndex","registryEntity","registry_entities_loaded","closeRegistryEntity","selectedAddress","loadRegistryEntities","get_current_id","i","l","find","length","point","created_at","Date","updated_at","parse","coord","components_RegistryEntitiesIndexMap","substring","Spinner","animation","Card","zIndex","Img","Body","top","right","borderRadius","display","verticalAlign","Title","Text","PagesExplorer","transactions","paddingTop","aria-label","transaction","transactionHash","eventName","App","undefined","components_Header","react_router","path","exact","render","Pages_PagesWelcome","assign","PagesAcceptInvite","component","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","production","googleMapsKey","development"],"mappings":"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","file":"static/js/main.348912bc.chunk.js","sourcesContent":["import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <nav className=\"mainHeader\">\n        <Container>\n          <Row>\n            <Col md=\"auto\">\n              <img src=\"/tellurium-logo-white.png\"\n                   srcSet=\"/tellurium-logo-white@2x.png 2x,\n                          /tellurium-logo-white@3x.png 3x\"\n                   className=\"Tellurium_logo_white\" />\n            </Col>\n            <Col className=\"nav-links-container\">\n              <div>\n                <Link to=\"/\">Welcome</Link>\n              </div>\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/users/new\">New User</Link>\n                  </div>\n                ) : null\n              }\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/users/index\">Users Index</Link>\n                  </div>\n                ) : null\n              }\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/registry_entities/new\">New Registry Entity</Link>\n                  </div>\n                ) : null\n              }\n              {\n                typeof this.props.current_user_role !== 'undefined' ? (\n                  <div>\n                    <Link to=\"/registry_entities/index\">Registry Entities Index</Link>\n                  </div>\n                ) : null\n              }\n              <div>\n                <Link to=\"/explorer\">Explorer</Link>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass MainWindow extends React.Component {\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={ this.props.style }>\n            { this.props.children }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MainWindow;\n\n\n{/* <React.Fragment>\n<h2>Welcome</h2>\n{\n  this.state.isLoginnedViaMetamask ? (\n    this.state.role === 1 ? (\n      <React.Fragment>\n        <p>You logined via MetaMask as Deployer</p>\n      </React.Fragment>\n    ) : (\n      this.state.role === 2 ? (\n        <React.Fragment>\n          <p>You logined via MetaMask as Notary</p>\n        </React.Fragment>\n      ) : (\n        this.state.role === 3 ? (\n          <React.Fragment>\n            <p>You logined via MetaMask as a common User</p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p>You are not in validated users list</p>\n          </React.Fragment>\n        )\n      )\n    )\n  ) : (\n    <React.Fragment>\n      <p>You'll need to auth via MetaMask</p>\n      <button type=\"button\"\n              onClick={this.tryToLoginViaMetamask}\n      >Login via MetaMask</button>\n    </React.Fragment>\n  )\n}\n</React.Fragment> */}","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async componentDidMount () {\n    // if (window.ethereum.selectedAddress) {\n    //   await this.tryToLoginViaMetamask();\n    // }\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role: role\n      });\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities/index');\n    }\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div className=\"signin_via_metamask_button_container\">\n              <button type=\"button\"\n                      className=\"signin_via_metamask_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Login via MetaMask</button>\n            </div>\n            {/* <div className=\"signin_as_notary_button_container\">\n              <button type=\"button\"\n                      className=\"signin_as_notary_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Sign in as Notary</button>\n            </div> */}\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container, InputGroup, Form } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false,\n      username: '',\n      query_params: {}\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async componentDidMount () {\n    let query_params_str = this.props.location.search.split('?')[1];\n    let query_params = {};\n    query_params_str.split('&').map( (query_param) => {\n      let [ k, v ] = query_param.split('=');\n      query_params[k] = v;\n    });\n    this.setState({ query_params });\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      let url = `${process.env.REACT_APP_BACKEND_URL}/invites/accept_invitation?`;\n      url += 'eth_address=' + accounts[0];\n      url += '&email=' + this.state.query_params['email'];\n      url += '&token=' + this.state.query_params['token'];\n      url += '&username=' + this.state.username;\n      \n      let response = await fetch(url);\n      response = await response.json();\n      console.log(response);\n\n      // const Users = contract(UsersJSON);\n  \n      // Users.setProvider(window.web3.currentProvider);\n      // Users.defaults({\n      //   from: accounts[0]\n      // });\n  \n      // const deployed = await Users.deployed();\n      // let role = await deployed.get_my_role();\n      // role = role.toNumber();\n\n      // if (!role || role === 0) {\n      //   console.log(role);\n      //   return null;\n      // }\n\n      // this.setState({\n      //   isLoginnedViaMetamask: true,\n      //   role: role\n      // });\n\n      this.props.app.setState({ current_user_role: 3 });\n      this.props.history.push('/registry_entities/index');\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div style={{ padding: '0 50px 0 50px', marginTop: '100px' }}>\n              <div>\n                1. Choose your username\n              </div>\n              <InputGroup>\n                <Form.Control type=\"text\"\n                              placeholder=\"Username\"\n                              name=\"username\"\n                              autoComplete='off'\n                              value={this.state.username}\n                              onChange={this.handleInputChange}\n                />\n              </InputGroup>\n              <div style={{ marginTop: '46px' }}>\n                2. Login with MetaMask to proceed\n              </div>\n              <div className=\"signin_via_metamask_button_container_invite_page\">\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login with MetaMask</button>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button, InputGroup, FormControl, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nconst ORDINARY_USER = 3;\n\nclass UsersNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      eth_address: '',\n      invitation_email: '',\n      email_preview_url: ''\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClickIfIsMetaMask = this.handleClickIfIsMetaMask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSendInviteButtonClick = this.handleSendInviteButtonClick.bind(this);\n  }\n\n  async handleSendInviteButtonClick() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/invites/send_invitation?mail_to=${this.state.invitation_email}`;\n    let response = await fetch(url);\n    response = await response.json();\n    console.log(response);\n    if (response && response.result&& response.result.preview_url) {\n      this.setState({ email_preview_url: response.result.preview_url });\n    }\n  }\n\n  async handleClickIfIsMetaMask() {\n    let url = `${process.env.REACT_APP_BACKEND_URL}/users`;\n    let params = {\n      email: this.state.email,\n      username: this.state.username,\n      eth_address: this.state.eth_address,\n      role: ORDINARY_USER\n    };\n    let response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(params)\n    });\n    console.log(response);\n\n    const accounts = await window.ethereum.enable();\n    const Users = contract(UsersJSON);\n\n    Users.setProvider(window.web3.currentProvider);\n    Users.defaults({\n      from: accounts[0]\n    });\n\n    const deployed = await Users.deployed();\n\n    try {\n      await deployed.create(this.state.eth_address, ORDINARY_USER);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      this.handleClickIfIsMetaMask();\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MainWindow style={{ marginTop: '110px' }}>\n          <Row>\n            <Col style={{ padding: '30px' }}>\n              <div className=\"Notary-Page\">\n                NOTARY PAGE\n              </div>\n              <Form>\n                <Form.Group controlId=\"formUsername\">\n                  <Form.Label>Username:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEthAddress\">\n                  <Form.Label>Ethereum address:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Ethereum address, e.g. 0x769048c07D7B7f55cD58c14BbE7d828da555dc08\"\n                                name=\"eth_address\"\n                                value={this.state.eth_address}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Row className=\"justify-content-md-center\">\n                    <Button type=\"button\"\n                            onClick={this.handleClick}\n                            variant='success'\n                            style={{ margin: '40px 0 40px 0' }}\n                    >\n                      VALIDATE\n                    </Button>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </MainWindow>\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={{ marginTop: '20px', marginBottom: '110px' }}>\n              <div className=\"Notary-Page\" style={{ marginTop: '30px' }}>\n                SEND INVITATION\n              </div>\n              <Row style={{ margin: '50px 0 50px 0' }}>\n                <Col>\n                  <InputGroup>\n                    <FormControl\n                      placeholder=\"Email\"\n                      name='invitation_email'\n                      autoComplete='off'\n                      onChange={this.handleInputChange}\n                      value={this.state.invitation_email}\n                    />\n                    <InputGroup.Append>\n                      <Button variant=\"success\"\n                              onClick={this.handleSendInviteButtonClick}\n                      >SEND INVITE</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div style={{ wordWrap: 'break-word' }}>\n                    <a target='_blank' href={this.state.email_preview_url}>\n                      {this.state.email_preview_url}\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default UsersNew;","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass UsersIndex extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      users: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users`);\n    response = await response.json();\n    let users = response;\n    this.setState({\n      users\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>ID</th>\n                    <th>Email</th>\n                    <th>ETH Address</th>\n                    <th>Role</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.users.map((user) => {\n                    return (\n                      <tr>\n                        <td>{user.id}</td>\n                        <td>{user.email}</td>\n                        <td>{user.eth_address}</td>\n                        <td>{user.role}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default UsersIndex;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nclass RegistryEntitiesNewMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11\n  }\n\n  renderMarkers(map, maps, onMarkerDragEnd) {\n    const marker = new maps.Marker({\n      position: {\n        lat: 37.775,\n        lng: -122.414\n      },\n      map,\n      draggable: true\n    })\n\n    const markerListener = marker.addListener(\"dragend\", (ev) => {\n      onMarkerDragEnd({ lat: ev.latLng.lat(), lng: ev.latLng.lng() });\n    })\n\n    this.setState({\n      markerListener: markerListener\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.markerListener.remove()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' library markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.renderMarkers(map, maps, this.props.onMarkerDragEnd)\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default RegistryEntitiesNewMap\n","import React from 'react';\n\nclass AboveTheMapWindow extends React.Component {\n  render () {\n    return (\n      <div className=\"registry-entities-container\" style={this.props.style}>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}\n\nexport default AboveTheMapWindow;","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nimport ipfsClient from 'ipfs-http-client';\n\nimport RegistryEntitiesNewMap from \"../../components/RegistryEntitiesNewMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.ipfs = ipfsClient(\n      process.env.REACT_APP_IPFS_API_SERVER_URL,\n      process.env.REACT_APP_IPFS_API_SERVER_PORT\n    );\n\n    this.state = {\n      title: '',\n      description: '',\n      documents_url: '',\n      image_url: '',\n      priceUSD: '',\n      documents_files: [],\n      images_files: [],\n      points: [ 0, 0, 0 ]\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.upload_documents = this.upload_documents.bind(this);\n    this.upload_image = this.upload_image.bind(this);\n\n    this.saveLatLngToState = this.saveLatLngToState.bind(this);\n  }\n\n  upload_documents (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ documents_files: event.target.files })\n  }\n\n  async saveToIpfsDocuments (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  upload_image (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.setState({ images_files: event.target.files })\n  }\n\n  async saveToIpfsImage (files) {\n    return this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n  }\n\n  saveLatLngToState(latLng) {\n    this.setState({\n      points: [\n        Math.round(latLng.lat*LAT_LNG_DIVIDER),\n        Math.round(latLng.lng*LAT_LNG_DIVIDER),\n        0\n      ]\n    });\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n\n      let response, ipfsId;\n      try {\n        response = await this.saveToIpfsDocuments(this.state.documents_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          documents_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      try {\n        response = await this.saveToIpfsImage(this.state.images_files)\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          image_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      } catch (err) {\n        console.error(err)\n      }\n\n      const deployed = await RegistryEntities.deployed();\n      await deployed.create(\n        this.state.title,\n        this.state.description,\n        this.state.documents_url,\n        this.state.image_url,\n        this.state.priceUSD,\n        this.state.points\n      );\n      \n      this.props.history.push('/registry_entities/index')\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesNewMap onMarkerDragEnd={this.saveLatLngToState} />\n        </div>\n        <AboveTheMapWindow style={{ padding: '30px' }}>\n          <Form>\n            <Form.Group controlId=\"formTitle\">\n              <Form.Label>Title:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control as=\"textarea\"\n                            placeholder=\"Description\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formPriceUSD\">\n              <Form.Label>PriceUSD:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Price in USD\"\n                            name=\"priceUSD\"\n                            value={this.state.priceUSD}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDocumentsUrl\">\n              <Form.Label>Upload Documents:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"documents_url\"\n                            onChange={this.upload_documents} />\n            </Form.Group>\n            <Form.Group controlId=\"formImageUrl\">\n              <Form.Label>Upload Image:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"image_url\"\n                            onChange={this.upload_image} />\n            </Form.Group>\n            <Form.Group controlId=\"formPoints\">\n              <Form.Label>Coordinates:</Form.Label>\n              <div>\n                Lat: {this.state.points[0]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Lng: {this.state.points[1]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Z: {this.state.points[2]}\n              </div>\n            </Form.Group>\n            <Row>\n              <Col>\n                <Button type=\"button\" onClick={this.handleClick}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </AboveTheMapWindow>\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesNew;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesIndexMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11,\n    registry_entities: []\n  }\n\n  renderMarkers() {\n    let _map = this.state._map\n    let _maps = this.state._maps\n\n    try {\n      this.props.registry_entities.forEach((registry_entity) => {\n        let latLng = {\n          lat: registry_entity.points[0] / LAT_LNG_DIVIDER,\n          lng: registry_entity.points[1] / LAT_LNG_DIVIDER\n        }\n\n        let marker = new _maps.Marker({\n          position: {\n            lat: latLng.lat,\n            lng: latLng.lng\n          },\n          map: _map\n        });\n\n        marker.registry_entity = registry_entity;\n        let showRegistryEntity = this.props.showRegistryEntity;\n\n        _maps.event.addListener(marker, 'click', function(e) {\n          showRegistryEntity(this.registry_entity);\n        });\n      })\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // REFACTOR: Not the best solution, because 'renderMarkers' function\n    // should be called only on 'this.props.registry_entities' change\n    // event.\n    this.renderMarkers()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.setState({ _map: map, _maps: maps })\n            this.renderMarkers()\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndexMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Button, Card, Container, Spinner } from 'react-bootstrap';\n\nimport RegistryEntitiesIndexMap from \"../../components/RegistryEntitiesIndexMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst use_postgre_cache_as_db = true;\n\nclass RegistryEntitiesIndex extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      registry_entities: [],\n      showRegistryEntity: false,\n      registryEntity: null,\n      registry_entities_loaded: false\n    };\n\n    this.closeRegistryEntity = this.closeRegistryEntity.bind(this);\n    this.showRegistryEntity = this.showRegistryEntity.bind(this);\n  }\n\n  async componentDidMount () {\n    if (window.ethereum.selectedAddress) {\n      await this.loadRegistryEntities();\n    }\n  }\n\n  async loadRegistryEntities () {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await RegistryEntities.deployed();\n      let registry_entities_current_id = await deployed.get_current_id();\n\n      let registry_entities = [];\n      if (!use_postgre_cache_as_db) {\n        for (let i = 1, l = registry_entities_current_id.toNumber(); i <= l; l--) {\n          let registry_entity = await deployed.find(l);\n\n          let documents_url = process.env.REACT_APP_SAMPLE_DOCUMENT || '';\n          if (registry_entity[3] && registry_entity[3].length > 0) {\n            documents_url = registry_entity[3];\n          }\n\n          registry_entities.push({\n            id: registry_entity[0].toNumber(),\n            title: registry_entity[1],\n            description: registry_entity[2],\n            documents_url: documents_url,\n            image_url: registry_entity[4],\n            priceUSD: registry_entity[6],\n            points: registry_entity[6].map( point => point.toNumber() ),\n            created_at: (new Date(registry_entity[7].toNumber() * 1000)),\n            updated_at: (new Date(registry_entity[8].toNumber() * 1000))\n          });\n\n          this.setState({\n            registry_entities: registry_entities\n          });\n        }\n      } else if (use_postgre_cache_as_db) {\n        let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/registry_entities`);\n        response = await response.json();\n        response.map( (registry_entity) => {\n          registry_entity.points = JSON.parse(registry_entity.points)\n          registry_entity.points = registry_entity.points.map( (coord) => (coord >> 0) );\n        });\n        registry_entities = response;\n        this.setState({\n          registry_entities: registry_entities\n        });\n      }\n\n      this.setState({\n        registry_entities_loaded: true\n      });\n    } else {\n  \n    }\n  }\n\n  closeRegistryEntity() {\n    this.setState({ showRegistryEntity: false });\n  }\n\n  showRegistryEntity(registry_entity) {\n    this.setState({\n      showRegistryEntity: true,\n      registryEntity: registry_entity\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesIndexMap registry_entities={this.state.registry_entities} showRegistryEntity={this.showRegistryEntity} />\n        </div>\n        <AboveTheMapWindow>\n          {\n            this.state.registry_entities.map((registry_entity) => {\n              return (\n                <Row key={registry_entity.id}\n                     className=\"registry-entity-row\"\n                     onClick={() => { this.showRegistryEntity(registry_entity) } }\n                >\n                  <Col>\n                    <h5>{registry_entity.title}</h5>\n                    <p>\n                      {\n                        registry_entity.description.length > 280 ? (\n                          `${registry_entity.description.substring(0, 280)}...`\n                        ) : registry_entity.description\n                      }\n                    </p>\n                  </Col>\n                  <Col md='auto'>\n                    <div className='registry-entities-image-container'>\n                      <img src={registry_entity.image_url} />\n                    </div>\n                  </Col>\n                </Row>\n              )\n            })\n          }\n          {!this.state.registry_entities_loaded && <Row>\n            <Col className='spinnerCol'>\n              <Spinner animation=\"grow\" variant=\"primary\" />\n            </Col>\n          </Row>}\n        </AboveTheMapWindow>\n        {\n          this.state.registryEntity ? (\n            <div className={ \"registry-entity-show-container\" + (this.state.showRegistryEntity ? '' : ' hidden') }>\n              <div className=\"close-button-container\" onClick={this.closeRegistryEntity}>\n                <img src=\"/x.png\"\n                     srcSet=\"/x@2x.png 2x,\n                             /x@3x.png 3x\" />\n              </div>\n              {\n                <Card style={{ position: 'relative', 'zIndex': 250 }}>\n                  <Card.Img variant=\"top\" src={this.state.registryEntity.image_url} />\n                  <Card.Body style={{ position: 'relative' }}>\n                    <Button variant=\"info\"\n                            href={this.state.registryEntity.documents_url}\n                            target=\"_blank\"\n                            style={{ position: \"absolute\", top: '-27px', right: '16px', width: '54px', height: '54px', 'borderRadius': '50%' }}\n                    >\n                      <span style={{ display: 'inline-block', height: '100%', verticalAlign: 'middle' }}></span>\n                      <img src=\"/download-doc.png\"\n                           style={{ verticalAlign: 'middle' }}\n                           srcSet=\"/download-doc@2x.png 2x,\n                                   /download-doc@3x.png 3x\" />\n                    </Button>\n                    <Card.Title>{this.state.registryEntity.title}</Card.Title>\n                    <Card.Text>\n                      <div><b>PriceUSD: {this.state.registryEntity.priceUSD}</b></div>\n                      <div>{this.state.registryEntity.description}</div>\n                    </Card.Text>\n                  </Card.Body>\n                </Card>\n              }\n            </div>\n          ) : null\n        }\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndex;\n","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass PagesExplorer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/transactions`);\n    response = await response.json();\n    let transactions = response;\n    this.setState({\n      transactions\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row style={{ paddingTop: '21px' }}>\n            <Col>\n              <InputGroup>\n                <FormControl\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n                <InputGroup.Append>\n                  <Button variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Control as=\"select\">\n                <option>AfterRegistryEntityCreated</option>\n                <option>AfterUserCreate</option>\n              </Form.Control>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>Transaction Hash</th>\n                    <th>Event</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.transactions.map((transaction) => {\n                    return (\n                      <tr>\n                        <td>\n                          <a href={'https://ropsten.etherscan.io/tx/' + transaction.transactionHash}\n                              target=\"_blank\"\n                          >\n                            {transaction.transactionHash}\n                          </a>\n                        </td>\n                        <td>{transaction.eventName}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PagesExplorer;\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header';\n\nimport PagesWelcome from './routes/Pages/PagesWelcome';\nimport PagesAcceptInvite from './routes/Pages/PagesAcceptInvite';\nimport UsersNew from './routes/Users/UsersNew';\nimport UsersIndex from './routes/Users/UsersIndex';\nimport RegistryEntitiesNew from './routes/RegistryEntities/RegistryEntitiesNew';\nimport RegistryEntitiesIndex from './routes/RegistryEntities/RegistryEntitiesIndex';\nimport PagesExplorer from './routes/Pages/PagesExplorer';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      current_user_role: undefined\n    };\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header current_user_role={this.state.current_user_role} />\n          \n          <Route path=\"/\" exact render={(props) => <PagesWelcome app={this} {...props} />} />\n          <Route path=\"/invites/accept\" render={(props) => <PagesAcceptInvite app={this} {...props} />} />\n          <Route path=\"/users/new\" component={UsersNew} />\n          <Route path=\"/users/index\" component={UsersIndex} />\n          <Route path=\"/registry_entities/index\" component={RegistryEntitiesIndex} />\n          <Route path=\"/registry_entities/new\" component={RegistryEntitiesNew} />\n          <Route path=\"/explorer\" component={PagesExplorer} />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  production: {\n    googleMapsKey: \"AIzaSyDIbd-oSFvBx_JtZzFuBkGHGdvA5SPBMVM\"\n  },\n  development: {\n    googleMapsKey: \"AIzaSyDbqXZerRwHyXrq8EIm488aJLmuBZ2J0Jg\"\n  }\n};"],"sourceRoot":""}