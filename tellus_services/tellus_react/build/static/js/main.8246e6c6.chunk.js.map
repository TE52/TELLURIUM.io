{"version":3,"sources":["components/Header.js","components/MainWindow.js","routes/Pages/PagesWelcome.js","routes/Pages/PagesAcceptInvite.js","routes/Users/UsersNew.js","components/RegistryEntitiesNewMap.js","components/AboveTheMapWindow.js","routes/RegistryEntities/RegistryEntitiesNew.js","components/RegistryEntitiesIndexMap.js","routes/RegistryEntities/RegistryEntitiesIndex.js","routes/Pages/PagesExplorer.js","App.js","serviceWorker.js","index.js",".secrets.js"],"names":["Header","react_default","a","createElement","className","Container","Row","Col","md","src","srcSet","react_router_dom","to","this","props","current_user_role","React","Component","MainWindow","span","offset","style","children","PagesWelcome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoginnedViaMetamask","tryToLoginViaMetamask","bind","assertThisInitialized","window","ethereum","enable","accounts","Users","contract","UsersJSON","setProvider","web3","currentProvider","defaults","from","deployed","get_my_role","role","toNumber","setState","app","history","push","components_MainWindow","marginTop","type","onClick","username","query_params","handleInputChange","query_params_str","location","search","split","map","query_param","_query_param$split","_query_param$split2","slicedToArray","k","v","url","process","fetch","response","json","console","log","e","target","value","checked","name","defineProperty","padding","InputGroup","Form","Control","placeholder","onChange","UsersNew","email","eth_address","invitation_email","email_preview_url","handleClick","handleSendInviteButtonClick","concat","result","preview_url","isMetaMask","create","Fragment","Group","controlId","Label","Button","variant","margin","marginBottom","FormControl","Append","wordWrap","href","RegistryEntitiesNewMap","maps","onMarkerDragEnd","markerListener","Marker","position","lat","lng","draggable","addListener","ev","latLng","remove","width","height","lib_default","bootstrapURLKeys","key","secrets","defaultCenter","center","defaultZoom","zoom","onGoogleApiLoaded","_ref","renderMarkers","defaultProps","AboveTheMapWindow","RegistryEntitiesNew","ipfs","ipfsClient","title","description","documents_url","image_url","points","upload_documents","upload_image","saveLatLngToState","event","stopPropagation","preventDefault","saveToIpfsDocuments","files","ipfsId","_this2","add","toConsumableArray","progress","prog","then","hash","catch","err","error","saveToIpfsImage","_this3","Math","round","RegistryEntities","RegistryEntitiesJSON","components_RegistryEntitiesNewMap","components_AboveTheMapWindow","as","RegistryEntitiesIndexMap","_map","_maps","registry_entities","registry_entity","prevProps","prevState","snapshot","RegistryEntitiesIndex","showRegistryEntity","registryEntity","closeRegistryEntity","selectedAddress","loadRegistryEntities","get_current_id","registry_entities_current_id","i","l","find","id","point","created_at","Date","updated_at","components_RegistryEntitiesIndexMap","Card","zIndex","Img","Body","top","right","borderRadius","display","verticalAlign","Title","Text","PagesExplorer","transactions","backgroundColor","minHeight","paddingTop","aria-label","Table","hover","transaction","transactionHash","eventName","App","undefined","components_Header","react_router","path","exact","render","Pages_PagesWelcome","assign","PagesAcceptInvite","component","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","production","googleMapsKey","development"],"mappings":"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","file":"static/js/main.8246e6c6.chunk.js","sourcesContent":["import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <nav className=\"mainHeader\">\n        <Container>\n          <Row>\n            <Col md=\"auto\">\n              <img src=\"/tellurium-logo-white.png\"\n                   srcSet=\"/tellurium-logo-white@2x.png 2x,\n                          /tellurium-logo-white@3x.png 3x\"\n                   className=\"Tellurium_logo_white\" />\n            </Col>\n            <Col className=\"nav-links-container\">\n              <div>\n                <Link to=\"/\">Welcome</Link>\n              </div>\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/users/new\">New User</Link>\n                  </div>\n                ) : null\n              }\n              {\n                this.props.current_user_role === 1 || this.props.current_user_role === 2 ? (\n                  <div>\n                    <Link to=\"/registry_entities/new\">New Registry Entity</Link>\n                  </div>\n                ) : null\n              }\n              {\n                typeof this.props.current_user_role !== 'undefined' ? (\n                  <div>\n                    <Link to=\"/registry_entities/index\">Registry Entities Index</Link>\n                  </div>\n                ) : null\n              }\n              <div>\n                <Link to=\"/explorer\">Explorer</Link>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </nav>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\n\nclass MainWindow extends React.Component {\n  render () {\n    return (\n      <Container>\n        <Row>\n          <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={ this.props.style }>\n            { this.props.children }\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MainWindow;\n\n\n{/* <React.Fragment>\n<h2>Welcome</h2>\n{\n  this.state.isLoginnedViaMetamask ? (\n    this.state.role === 1 ? (\n      <React.Fragment>\n        <p>You logined via MetaMask as Deployer</p>\n      </React.Fragment>\n    ) : (\n      this.state.role === 2 ? (\n        <React.Fragment>\n          <p>You logined via MetaMask as Notary</p>\n        </React.Fragment>\n      ) : (\n        this.state.role === 3 ? (\n          <React.Fragment>\n            <p>You logined via MetaMask as a common User</p>\n          </React.Fragment>\n        ) : (\n          <React.Fragment>\n            <p>You are not in validated users list</p>\n          </React.Fragment>\n        )\n      )\n    )\n  ) : (\n    <React.Fragment>\n      <p>You'll need to auth via MetaMask</p>\n      <button type=\"button\"\n              onClick={this.tryToLoginViaMetamask}\n      >Login via MetaMask</button>\n    </React.Fragment>\n  )\n}\n</React.Fragment> */}","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n  }\n\n  async componentDidMount () {\n    // if (window.ethereum.selectedAddress) {\n    //   await this.tryToLoginViaMetamask();\n    // }\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role: role\n      });\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities/index');\n    }\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div className=\"signin_via_metamask_button_container\">\n              <button type=\"button\"\n                      className=\"signin_via_metamask_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Login via MetaMask</button>\n            </div>\n            {/* <div className=\"signin_as_notary_button_container\">\n              <button type=\"button\"\n                      className=\"signin_as_notary_button\"\n                      onClick={this.tryToLoginViaMetamask}\n              >Sign in as Notary</button>\n            </div> */}\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from 'truffle-contract';\nimport UsersJSON from '../../contracts/Users.json';\n\nimport { Row, Col, Container, InputGroup, Form } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass PagesWelcome extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      isLoginnedViaMetamask: false,\n      username: '',\n      query_params: {}\n    };\n\n    this.tryToLoginViaMetamask = this.tryToLoginViaMetamask.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  async componentDidMount () {\n    let query_params_str = this.props.location.search.split('?')[1];\n    let query_params = {};\n    query_params_str.split('&').map( (query_param) => {\n      let [ k, v ] = query_param.split('=');\n      query_params[k] = v;\n    });\n    this.setState({ query_params });\n  }\n\n  async tryToLoginViaMetamask () {\n    if (!window.ethereum) {\n      return null;\n    }\n    \n    const accounts = await window.ethereum.enable();\n    if (accounts) {\n      let url = `${process.env.REACT_APP_EXPLORER_SERVICE_BASE_URL}/invites/accept_invitation?`;\n      url += 'eth_address=' + accounts[0];\n      url += '&email=' + this.state.query_params['email'];\n      url += '&token=' + this.state.query_params['token'];\n      \n      let response = await fetch(url);\n      response = await response.json();\n      console.log(response);\n\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      let role = await deployed.get_my_role();\n      role = role.toNumber();\n\n      if (!role || role === 0) {\n        console.log(role);\n        return null;\n      }\n\n      this.setState({\n        isLoginnedViaMetamask: true,\n        role: role\n      });\n\n      this.props.app.setState({ current_user_role: role });\n      this.props.history.push('/registry_entities/index');\n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render () {\n    return (\n      <MainWindow style={{ marginTop: '110px' }}>\n        <Row>\n          <Col className=\"separator_hor\">\n            <div>\n              <img src=\"/tellurium-logo.png\"\n                  srcSet=\"/tellurium-logo@2x.png 2x,\n                          /tellurium-logo@3x.png 3x\"\n                  className=\"Tellurium_logo\" />\n            </div>\n            <div>\n              <img src=\"/art.jpg\"\n                  srcSet=\"/art@2x.jpg 2x,\n                          /art@3x.jpg 3x\"\n                  className=\"art\" />\n            </div>\n            <div className=\"With-Proof-of-Ownership\">\n              With Proof of Ownership on the Blockchain property owners can\n              express their real estate rights in the crypto economy with\n              our Patent Pending Blockchain Protocol.\n            </div>\n          </Col>\n          <Col>\n            <div className=\"Welcome\">\n              Welcome!\n            </div>\n            <div style={{ padding: '0 50px 0 50px', marginTop: '100px' }}>\n              <div>\n                1. Choose your username\n              </div>\n              <InputGroup>\n                <Form.Control type=\"text\"\n                              placeholder=\"Username\"\n                              name=\"username\"\n                              value={this.state.username}\n                              onChange={this.handleInputChange}\n                />\n              </InputGroup>\n              <div style={{ marginTop: '46px' }}>\n                2. Login with MetaMask to proceed\n              </div>\n              <div className=\"signin_via_metamask_button_container_invite_page\">\n                <button type=\"button\"\n                        className=\"signin_via_metamask_button\"\n                        onClick={this.tryToLoginViaMetamask}\n                >Login with MetaMask</button>\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </MainWindow>\n    );\n  }\n}\n\nexport default PagesWelcome;\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport UsersJSON from \"../../contracts/Users.json\";\n\nimport { Row, Col, Form, Button, InputGroup, FormControl, Container } from 'react-bootstrap';\nimport MainWindow from '../../components/MainWindow'\n\nclass UsersNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      email: '',\n      eth_address: '',\n      invitation_email: '',\n      email_preview_url: ''\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSendInviteButtonClick = this.handleSendInviteButtonClick.bind(this);\n  }\n\n  async handleSendInviteButtonClick() {\n    let response = await fetch(`${process.env.REACT_APP_EXPLORER_SERVICE_BASE_URL}/invites/send_invitation?mail_to=${this.state.invitation_email}`);\n    response = await response.json();\n    console.log(response);\n    if (response && response.result&& response.result.preview_url) {\n      this.setState({ email_preview_url: response.result.preview_url });\n    }\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const Users = contract(UsersJSON);\n  \n      Users.setProvider(window.web3.currentProvider);\n      Users.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await Users.deployed();\n      deployed.create(this.state.eth_address, 0);\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <MainWindow style={{ marginTop: '110px' }}>\n          <Row>\n            <Col style={{ padding: '30px' }}>\n              <div className=\"Notary-Page\">\n                NOTARY PAGE\n              </div>\n              <Form>\n                <Form.Group controlId=\"formUsername\">\n                  <Form.Label>Username:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEmail\">\n                  <Form.Label>Email:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Email\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Form.Group controlId=\"formEthAddress\">\n                  <Form.Label>Ethereum address:</Form.Label>\n                  <Form.Control type=\"text\"\n                                placeholder=\"Ethereum address, e.g. 0x769048c07D7B7f55cD58c14BbE7d828da555dc08\"\n                                name=\"eth_address\"\n                                value={this.state.eth_address}\n                                onChange={this.handleInputChange} />\n                </Form.Group>\n                <Row className=\"justify-content-md-center\">\n                    <Button type=\"button\"\n                            onClick={this.handleClick}\n                            variant='success'\n                            style={{ margin: '40px 0 40px 0' }}\n                    >\n                      VALIDATE\n                    </Button>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n        </MainWindow>\n        <Container>\n          <Row>\n            <Col md={{ span: 8, offset: 2 }} className=\"bg_card\" style={{ marginTop: '20px', marginBottom: '110px' }}>\n              <div className=\"Notary-Page\" style={{ marginTop: '30px' }}>\n                SEND INVITATION\n              </div>\n              <Row style={{ margin: '50px 0 50px 0' }}>\n                <Col>\n                  <InputGroup>\n                    <FormControl\n                      placeholder=\"Email\"\n                      name='invitation_email'\n                      onChange={this.handleInputChange}\n                      value={this.state.invitation_email}\n                    />\n                    <InputGroup.Append>\n                      <Button variant=\"success\"\n                              onClick={this.handleSendInviteButtonClick}\n                      >SEND INVITE</Button>\n                    </InputGroup.Append>\n                  </InputGroup>\n                  <div style={{ wordWrap: 'break-word' }}>\n                    <a target='_blank' href={this.state.email_preview_url}>\n                      {this.state.email_preview_url}\n                    </a>\n                  </div>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default UsersNew;","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nclass RegistryEntitiesNewMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11\n  }\n\n  renderMarkers(map, maps, onMarkerDragEnd) {\n    const marker = new maps.Marker({\n      position: {\n        lat: 37.775,\n        lng: -122.414\n      },\n      map,\n      draggable: true\n    })\n\n    const markerListener = marker.addListener(\"dragend\", (ev) => {\n      onMarkerDragEnd({ lat: ev.latLng.lat(), lng: ev.latLng.lng() });\n    })\n\n    this.setState({\n      markerListener: markerListener\n    })\n  }\n\n  componentWillUnmount() {\n    this.state.markerListener.remove()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' library markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.renderMarkers(map, maps, this.props.onMarkerDragEnd)\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    )\n  }\n}\n\nexport default RegistryEntitiesNewMap\n","import React from 'react';\n\nclass AboveTheMapWindow extends React.Component {\n  render () {\n    return (\n      <div className=\"registry-entities-container\" style={this.props.style}>\n        {\n          this.props.children\n        }\n      </div>\n    )\n  }\n}\n\nexport default AboveTheMapWindow;","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Form, Button } from 'react-bootstrap';\n\nimport ipfsClient from 'ipfs-http-client';\n\nimport RegistryEntitiesNewMap from \"../../components/RegistryEntitiesNewMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesNew extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.ipfs = ipfsClient(\n      process.env.REACT_APP_IPFS_API_SERVER_URL,\n      process.env.REACT_APP_IPFS_API_SERVER_PORT\n    );\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      documents_url: \"\",\n      image_url: \"\",\n      points: [ 0, 0, 0 ]\n    };\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.upload_documents = this.upload_documents.bind(this);\n    this.upload_image = this.upload_image.bind(this);\n\n    this.saveLatLngToState = this.saveLatLngToState.bind(this);\n  }\n\n  upload_documents (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.saveToIpfsDocuments(event.target.files)\n  }\n\n  saveToIpfsDocuments (files) {\n    let ipfsId\n    this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          documents_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  upload_image (event) {\n    event.stopPropagation()\n    event.preventDefault()\n    this.saveToIpfsImage(event.target.files)\n  }\n\n  saveToIpfsImage (files) {\n    let ipfsId\n    this.ipfs.add([...files], { progress: (prog) => console.log(`received: ${prog}`) })\n      .then((response) => {\n        console.log(response)\n        ipfsId = response[0].hash\n        console.log(ipfsId)\n        this.setState({\n          image_url: `${process.env.REACT_APP_IPFS_GATEWAY_URL}/ipfs/${ipfsId}`\n        })\n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  saveLatLngToState(latLng) {\n    this.setState({\n      points: [\n        Math.round(latLng.lat*LAT_LNG_DIVIDER),\n        Math.round(latLng.lng*LAT_LNG_DIVIDER),\n        0\n      ]\n    });\n  }\n\n  async handleClick() {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await RegistryEntities.deployed();\n      await deployed.create(\n        this.state.title,\n        this.state.description,\n        this.state.documents_url,\n        this.state.image_url,\n        this.state.points\n      );\n      \n      this.props.history.push('/registry_entities/index')\n    } else {\n  \n    }\n  }\n\n  handleInputChange(e) {\n    const target = e.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    this.setState({\n        [name]: value\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesNewMap onMarkerDragEnd={this.saveLatLngToState} />\n        </div>\n        <AboveTheMapWindow style={{ padding: '30px' }}>\n          <Form>\n            <Form.Group controlId=\"formTitle\">\n              <Form.Label>Title:</Form.Label>\n              <Form.Control type=\"text\"\n                            placeholder=\"Title\"\n                            name=\"title\"\n                            value={this.state.title}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Description:</Form.Label>\n              <Form.Control as=\"textarea\"\n                            placeholder=\"Description\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.handleInputChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formDocumentsUrl\">\n              <Form.Label>Upload Documents:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"documents_url\"\n                            onChange={this.upload_documents} />\n            </Form.Group>\n            <Form.Group controlId=\"formImageUrl\">\n              <Form.Label>Upload Image:</Form.Label>\n              <Form.Control type=\"file\"\n                            name=\"image_url\"\n                            onChange={this.upload_image} />\n            </Form.Group>\n            <Form.Group controlId=\"formPoints\">\n              <Form.Label>Coordinates:</Form.Label>\n              <div>\n                Lat: {this.state.points[0]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Lng: {this.state.points[1]/LAT_LNG_DIVIDER}\n              </div>\n              <div>\n                Z: {this.state.points[2]}\n              </div>\n            </Form.Group>\n            <Row>\n              <Col>\n                <Button type=\"button\" onClick={this.handleClick}>\n                  Save\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </AboveTheMapWindow>\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesNew;\n","import React, { Component } from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport * as secrets from '../.secrets'\n\nconst LAT_LNG_DIVIDER = 1000000;\n\nclass RegistryEntitiesIndexMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 37.775,\n      lng: -122.414\n    },\n    zoom: 11,\n    registry_entities: []\n  }\n\n  renderMarkers() {\n    let _map = this.state._map\n    let _maps = this.state._maps\n\n    let latLngs = this.props.registry_entities.map((registry_entity) => {\n      return {\n        lat: registry_entity.points[0] / LAT_LNG_DIVIDER,\n        lng: registry_entity.points[1] / LAT_LNG_DIVIDER\n      }\n    })\n\n    latLngs.map(function (latLng) {\n      return new _maps.Marker({\n        position: {\n          lat: latLng.lat,\n          lng: latLng.lng\n        },\n        map: _map\n      })\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // REFACTOR: Not the best solution, because 'renderMarkers' function\n    // should be called only on 'this.props.registry_entities' change\n    // event.\n    this.renderMarkers()\n  }\n\n  render() {\n    return (\n      <div style={{ width: '100%', height: '100%' }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: secrets[process.env.NODE_ENV][\"googleMapsKey\"] }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n          // It is not best way to render markers and use 'onGoogleApiLoaded'\n          // for 'google-map-react' library, so this peace of code requires\n          // TODO: refactoring to native 'google-map-react' markers like\n          // there https://github.com/google-map-react/google-map-react/issues/59\n          onGoogleApiLoaded={({ map, maps }) => {\n            this.setState({ _map: map, _maps: maps })\n            this.renderMarkers()\n          }}\n        >\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndexMap\n","import React from 'react';\n\nimport contract from \"truffle-contract\";\nimport RegistryEntitiesJSON from \"../../contracts/RegistryEntities.json\";\n\nimport { Row, Col, Button, Card, Container } from 'react-bootstrap';\n\nimport RegistryEntitiesIndexMap from \"../../components/RegistryEntitiesIndexMap\";\nimport AboveTheMapWindow from \"../../components/AboveTheMapWindow\";\n\nclass RegistryEntitiesIndex extends React.Component {\n  constructor (props) {\n    super(props);\n\n    this.state = {\n      registry_entities: [],\n      showRegistryEntity: false,\n      registryEntity: null\n    };\n\n    this.closeRegistryEntity = this.closeRegistryEntity.bind(this);\n    this.showRegistryEntity = this.showRegistryEntity.bind(this);\n  }\n\n  async componentDidMount () {\n    if (window.ethereum.selectedAddress) {\n      await this.loadRegistryEntities();\n    }\n  }\n\n  async loadRegistryEntities () {\n    if (window.ethereum.isMetaMask) {\n      const accounts = await window.ethereum.enable();\n      const RegistryEntities = contract(RegistryEntitiesJSON);\n  \n      RegistryEntities.setProvider(window.web3.currentProvider);\n      RegistryEntities.defaults({\n        from: accounts[0]\n      });\n  \n      const deployed = await RegistryEntities.deployed();\n      let registry_entities_current_id = await deployed.get_current_id();\n\n      let registry_entities = [];\n      for (let i = 1, l = registry_entities_current_id.toNumber(); i <= l; l--) {\n        let registry_entity = await deployed.find(l);\n        registry_entities.push({\n          id: registry_entity[0].toNumber(),\n          title: registry_entity[1],\n          description: registry_entity[2],\n          documents_url: registry_entity[3],\n          image_url: registry_entity[4],\n          points: registry_entity[5].map( point => point.toNumber() ),\n          created_at: (new Date(registry_entity[6].toNumber() * 1000)),\n          updated_at: (new Date(registry_entity[7].toNumber() * 1000))\n        });\n      }\n\n      this.setState({\n        registry_entities: registry_entities\n      });\n    } else {\n  \n    }\n  }\n\n  closeRegistryEntity() {\n    this.setState({ showRegistryEntity: false });\n  }\n\n  showRegistryEntity(registry_entity) {\n    this.setState({\n      showRegistryEntity: true,\n      registryEntity: registry_entity\n    });\n  }\n\n\n  render() {\n    return (\n      <>\n        <div className='map-container'>\n          <RegistryEntitiesIndexMap registry_entities={this.state.registry_entities} />\n        </div>\n        <AboveTheMapWindow>\n          {\n            this.state.registry_entities.map((registry_entity) => {\n              return (\n                <Row key={registry_entity.id}\n                    className=\"registry-entity-row\"\n                    onClick={() => { this.showRegistryEntity(registry_entity) } }\n                >\n                  <Col>\n                    <h5>{registry_entity.title}</h5>\n                    <p>{registry_entity.description}</p>\n                  </Col>\n                  <Col md='auto'>\n                    <div className='registry-entities-image-container'>\n                      <img src={registry_entity.image_url} />\n                    </div>\n                  </Col>\n                </Row>\n              )\n            })\n          }\n        </AboveTheMapWindow>\n        {\n          this.state.registryEntity ? (\n            <div className={ \"registry-entity-show-container\" + (this.state.showRegistryEntity ? '' : ' hidden') }>\n              <div className=\"close-button-container\" onClick={this.closeRegistryEntity}>\n                <img src=\"/x.png\"\n                     srcSet=\"/x@2x.png 2x,\n                             /x@3x.png 3x\" />\n              </div>\n              {\n                <Card style={{ position: 'relative', 'zIndex': 250 }}>\n                  <Card.Img variant=\"top\" src={this.state.registryEntity.image_url} />\n                  <Card.Body style={{ position: 'relative' }}>\n                    <Button variant=\"info\"\n                            href={this.state.registryEntity.documents_url}\n                            target=\"_blank\"\n                            style={{ position: \"absolute\", top: '-27px', right: '16px', width: '54px', height: '54px', 'borderRadius': '50%' }}\n                    >\n                      <span style={{ display: 'inline-block', height: '100%', verticalAlign: 'middle' }}></span>\n                      <img src=\"/download-doc.png\"\n                           style={{ verticalAlign: 'middle' }}\n                           srcSet=\"/download-doc@2x.png 2x,\n                                   /download-doc@3x.png 3x\" />\n                    </Button>\n                    <Card.Title>{this.state.registryEntity.title}</Card.Title>\n                    <Card.Text>{this.state.registryEntity.description}</Card.Text>\n                  </Card.Body>\n                </Card>\n              }\n            </div>\n          ) : null\n        }\n      </>\n    );\n  }\n}\n\nexport default RegistryEntitiesIndex;\n","import React from 'react';\nimport { Table, Row, Col, Container,\n         InputGroup, FormControl, Button, Form } from 'react-bootstrap';\n\nclass PagesExplorer extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: []\n    };\n  }\n\n  async componentDidMount () {\n    let response = await fetch(`${process.env.REACT_APP_EXPLORER_SERVICE_BASE_URL}/transactions`);\n    response = await response.json();\n    let transactions = response;\n    this.setState({\n      transactions\n    });\n  }\n\n  render () {\n    return (\n      <div style={{ backgroundColor: '#e9e9e9', minHeight: '100%' }}>\n        <Container md={{ span: 10, offset: 1 }}>\n          <Row style={{ paddingTop: '21px' }}>\n            <Col>\n              <InputGroup>\n                <FormControl\n                  placeholder=\"Search\"\n                  aria-label=\"Search\"\n                />\n                <InputGroup.Append>\n                  <Button variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Col>\n            <Col>\n              <Form.Control as=\"select\">\n                <option>AfterRegistryEntityCreated</option>\n                <option>AfterUserCreate</option>\n              </Form.Control>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table hover className='explorer-table'>\n                <thead>\n                  <tr>\n                    <th>Transaction Hash</th>\n                    <th>Event</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {\n                  this.state.transactions.map((transaction) => {\n                    return (\n                      <tr>\n                        <td>\n                          <a href={'https://ropsten.etherscan.io/tx/' + transaction.transactionHash}\n                              target=\"_blank\"\n                          >\n                            {transaction.transactionHash}\n                          </a>\n                        </td>\n                        <td>{transaction.eventName}</td>\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </Table>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default PagesExplorer;\n","import React from 'react';\nimport './App.css';\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Header from './components/Header';\n\nimport PagesWelcome from './routes/Pages/PagesWelcome';\nimport PagesAcceptInvite from './routes/Pages/PagesAcceptInvite';\nimport UsersNew from './routes/Users/UsersNew';\nimport RegistryEntitiesNew from './routes/RegistryEntities/RegistryEntitiesNew';\nimport RegistryEntitiesIndex from './routes/RegistryEntities/RegistryEntitiesIndex';\nimport PagesExplorer from './routes/Pages/PagesExplorer';\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      current_user_role: undefined\n    };\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Router>\n          <Header current_user_role={this.state.current_user_role} />\n          \n          <Route path=\"/\" exact render={(props) => <PagesWelcome app={this} {...props} />} />\n          <Route path=\"/invites/accept\" render={(props) => <PagesAcceptInvite app={this} {...props} />} />\n          <Route path=\"/users/new\" component={UsersNew} />\n          <Route path=\"/registry_entities/index\" component={RegistryEntitiesIndex} />\n          <Route path=\"/registry_entities/new\" component={RegistryEntitiesNew} />\n          <Route path=\"/explorer\" component={PagesExplorer} />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  production: {\n    googleMapsKey: \"AIzaSyDIbd-oSFvBx_JtZzFuBkGHGdvA5SPBMVM\"\n  },\n  development: {\n    googleMapsKey: \"AIzaSyDbqXZerRwHyXrq8EIm488aJLmuBZ2J0Jg\"\n  }\n};"],"sourceRoot":""}